@startuml FacadePatternSequenceDiagram

actor Client
participant "Facade" as Facade
participant "SubsystemClassA" as SubsystemA
participant "SubsystemClassB" as SubsystemB
participant "SubsystemClassC" as SubsystemC

Client -> Facade : performAction()
activate Facade

Facade -> SubsystemA : actionA()
activate SubsystemA
SubsystemA --> Facade : resultA
deactivate SubsystemA

Facade -> SubsystemB : actionB()
activate SubsystemB
SubsystemB --> Facade : resultB
deactivate SubsystemB

Facade -> SubsystemC : actionC()
activate SubsystemC
SubsystemC --> Facade : resultC
deactivate SubsystemC

Facade --> Client : actionResult
deactivate Facade

note over Facade : Facade simplifies and unifies the\ncomplexity of subsystem interactions\nfor the client.

@enduml
