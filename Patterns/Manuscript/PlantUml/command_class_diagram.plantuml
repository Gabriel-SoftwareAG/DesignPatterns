@startuml CommandPatternClassDiagram

' Command interface
interface Command {
  +execute() : void
}

' ConcreteCommand classes
class ConcreteCommandA implements Command {
  -receiver : Receiver
  +ConcreteCommandA(receiver : Receiver)
  +execute() : void
}

class ConcreteCommandB implements Command {
  -receiver : Receiver
  +ConcreteCommandB(receiver : Receiver)
  +execute() : void
}

' Receiver class
class Receiver {
  +actionA() : void
  +actionB() : void
}

' Invoker class
class Invoker {
  -command : Command
  +setCommand(command : Command) : void
  +invokeCommand() : void
}

' Client class
class Client {
}

' Relationships
Client -down-> Invoker : sets command >
Invoker -down-> Command : invokes >
Command .left.> Receiver : commands >
ConcreteCommandA .up.|> Command : implements
ConcreteCommandB .up.|> Command : implements
ConcreteCommandA -right-> Receiver : acts on
ConcreteCommandB -right-> Receiver : acts on

@enduml
