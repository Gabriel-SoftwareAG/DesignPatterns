@startuml BridgePatternSequenceDiagram

actor Client
participant "Abstraction" as Abstraction
participant "RefinedAbstraction" as RefinedAbstraction
participant "Implementor" as Implementor
participant "ConcreteImplementorA" as ConcreteImplementorA

Client -> RefinedAbstraction : operation()
activate RefinedAbstraction

RefinedAbstraction -> Implementor : implementationOperation()
activate Implementor

Implementor -> ConcreteImplementorA : implementationOperation()
activate ConcreteImplementorA

ConcreteImplementorA --> Implementor : operationDone
deactivate ConcreteImplementorA

Implementor --> RefinedAbstraction : operationDone
deactivate Implementor

RefinedAbstraction --> Client : result
deactivate RefinedAbstraction

note over Implementor : The Implementor could be\nConcreteImplementorA or\nConcreteImplementorB

@enduml
