@startuml StrategyPatternSequenceDiagram

actor Client
participant "Context" as Context
participant "Strategy" as StrategyInterface
participant "ConcreteStrategyA" as StrategyA
participant "ConcreteStrategyB" as StrategyB

Client -> Context : setStrategy(StrategyA)
activate Context

Context -> StrategyInterface : <<create>>
activate StrategyInterface
StrategyInterface --> Context
deactivate StrategyInterface

Client -> Context : executeStrategy()
activate Context
Context -> StrategyA : algorithmInterface()
activate StrategyA
StrategyA --> Context
deactivate StrategyA
Context --> Client
deactivate Context

Client -> Context : setStrategy(StrategyB)
activate Context

Context -> StrategyInterface : <<create>>
activate StrategyInterface
StrategyInterface --> Context
deactivate StrategyInterface

Client -> Context : executeStrategy()
activate Context
Context -> StrategyB : algorithmInterface()
activate StrategyB
StrategyB --> Context
deactivate StrategyB
Context --> Client
deactivate Context

@enduml
